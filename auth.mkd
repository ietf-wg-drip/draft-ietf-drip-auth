---
coding: utf-8

title: DRIP Authentication Formats & Protocols for Broadcast Remote ID
abbrev: auth-formats
docname: draft-ietf-drip-auth-06
category: info

ipr: trust200902
area: Internet
wg: DRIP Working Group
kw: Internet-Draft
cat: std

stand_alone: yes
pi: [toc, sortrefs, symrefs, comments]

author:

-   ins: A. Wiethuechter (Editor)
    name: Adam Wiethuechter
    org: AX Enterprize, LLC
    street: 4947 Commercial Drive
    city: Yorkville
    region: NY
    code: 13495
    country: USA
    email: adam.wiethuechter@axenterprize.com
-   ins: S. Card
    name: Stuart Card
    org: AX Enterprize, LLC
    street: 4947 Commercial Drive
    city: Yorkville
    region: NY
    code: 13495
    country: USA
    email: stu.card@axenterprize.com
-   ins: R. Moskowitz
    name: Robert Moskowitz
    org: HTT Consulting
    street: ""
    city: Oak Park
    region: MI
    code: 48237
    country: USA
    email: rgm@labs.htt-consult.com

normative:
    F3411:
        title: "Standard Specification for Remote ID and Tracking"
        author:
        org: ASTM International
        date: 2020-02

informative:
    drip-requirements: RFC9153
    drip-rid: I-D.ietf-drip-uas-rid
    drip-registries: I-D.wiethuechter-drip-registries

--- abstract

This document describes how to include trust into the ASTM Remote ID specification defined in ASTM F3411 under Broadcast Remote ID (RID). It defines a few message schemes (sent within the Authentication Message) that can be used to authenticate past messages sent by a unmanned aircraft (UA) and provide proof of UA trustworthiness even in the absence of Internet connectivity at the receiving node.

--- middle

# Introduction

Unmanned Aircraft Systems (UAS) are usually in a volatile environment when it comes to communication. UA are generally small with little computational (or flying) horsepower to carry standard communication equipment. This limits  the mediums of communication to few viable options.

Observer systems (e.g. smartphones and tablets) place further constraints on the communication options. The Remote ID Broadcast messages MUST be available to applications on these platforms without modifying the devices.

The ASTM {{F3411}} standard focuses on two ways of communicating to a UAS for Remote ID (RID): Broadcast and Network.

This document will focus on adding trust to Broadcast RID via the Authentication Message by combining dynamically signed data with an Attestation of the UA's identity from a Registry.

## DRIP Requirements Addressed

The following {{?drip-requirements}} will be addressed:

GEN 1: Provable Ownership

: This will be addressed using the DRIP Link and DRIP Wrapper or DRIP Manifest.

GEN 2: Provable Binding

: This requirement is addressed using the DRIP Wrapper or DRIP Manifest.

GEN 3: Provable Registration

: This requirement is addressed using the DRIP Link.

See {{drip-recommendations}} for further clarification.

# Terminology {#terminology}

## Required Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 {{!RFC2119}} {{!RFC8174}} when, and only when, they appear in all capitals, as shown here.

## Definitions

See {{?drip-requirements}} for common DRIP terms.

Legacy Transports:

:  uses broadcast frames (Bluetooth 4.x).

Extended Transports:

: uses the extended advertisements (Bluetooth 5.X), service info (Wi-Fi NaN) or vendor specific element information (Wi-Fi BEACON). Must use ASTM {{F3411}} Message Pack (Message Type 0xF).

# Background

## Problem Space and Focus

The current standard for Remote ID does not, in any meaningful capacity, address the concerns of trust in the UA space with communication in the Broadcast RID environment. This is a requirement that will need to be addressed eventually for various different parties that have a stake in the UA industry.

## Reasoning for IETF DRIP Authentication

The ASTM Authentication Message has provisions in {{F3411}} to allow for other organizations to standardize additional Authentication formats beyond those explicitly in {{F3411}}.  The standardization of specific formats to support the DRIP requirements in UAS RID for trustworthy communications over Broadcast RID is an important part of the chain of trust for a UAS ID.  No existing formats (defined in {{F3411}} or other organizations leveraging this feature) provide the functionality to satisfy this goal resulting in the work reflected in this document.

## ASTM Authentication Message

The ASTM Authentication Message (Message Type 0x2) is a unique message in the Broadcast {{F3411}} standard as it is the only one that is paged.

### Authentication Page

{:fig: artwork-align="center"}
~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                     Authentication Payload                    |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Page Header: (1 byte)
    Authentication Type (4 bits)
    Page Number (4 bits)
    
Authentication Payload: (23 bytes per page)
    Authentication Payload, including headers. Null padded.
~~~~
{:fig #astm-auth-page title="Standard ASTM Authentication Message Page"}

A single Authentication Page is akin to a TCP or UDP packet. For Authentication Pages the structure is further wrapped by outer ASTM framing and the specific link framing (Bluetooth or Wi-Fi).

#### Authentication Type

{{F3411}} has the following subset of Authentication Type's defined and that can be used in the `Page Header`:

| Authentication Type | Description                    |
| ------------------- | ------------------------------ |
| 0x2                 | Operator ID Signature          |
| 0x3                 | Message Set Signature          |
| 0x5                 | Specific Authentication Method |

##### Specific Authentication Method (SAM)

This document leverages Authentication Type 0x5, Specific Authentication Method (SAM), defining a set of SAM Types in {{specific-method}}. Other Authentication Types are also used in DRIP and their use is defined in {{drip-authentication-formats}}.

#### Page Number

There is a technical maximum of 16-pages (indexed 0 to 15 in the `Page Header`) that can be sent for a single Authentication Message, with each page carrying a max 23-byte `Authentication Payload`. See {{drip-restrictions}} for more details.

#### Authentication Payload Field

The following is shown in its complete format.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                     Authentication Headers                    |
|                               +---------------+---------------+
|                               |                               |
+---------------+---------------+                               |
.                                                               .
.                Authentication Data / Signature                .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|      ADL      |                                               |
+---------------+                                               |
.                                                               .
.                       Additional Data                         .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+

Authentication Headers: (6 bytes)
    Contains other header information for the Authentication
    Message as defined in F3411.

Authentication Data / Signature: (0 to 255 bytes)
    Opaque authentication data.

Additional Data Length (ADL): (1 byte - unsigned)
    Length in bytes of Additional Data.

Additional Data: (0 to 255 bytes):
    Data that follows the Authentication Data / Signature but
    is not considered part of the Authentication Data.
~~~~
{:fig #astm-auth title="ASTM Authentication Message Fields"}

{{astm-auth}} is the abstract view of the data fields found in the Authentication Message as defined by {{F3411}}. This data is placed into {{astm-auth-page}}'s `Authentication Payload`, spanning multiple pages.

When `Additional Data` is being sent, a single unsigned byte (`Additional Data Length`) directly follows the `Authentication Data / Signature` and has the length, in bytes, of the following `Additional Data`. For DRIP, this field is used to carry Forward Error Correction as defined in {{fec-details}}.

Full examples of Authentication Messages (fully paginated; both with and without Additional Data) can be found in {{auth-examples}}.

### DRIP Constraints {#drip-restrictions}

To keep consistent formatting across the different transports (Legacy and Extended) and their independent restrictions the authentication data being sent is REQUIRED to fit within the page limit of the most constrained existing transport can support. Under Broadcast RID the transport that can hold the least amount of authentication data is Bluetooth 5 and Wi-Fi BEACON at 9-pages.

As such DRIP transmitters are REQUIRED to adhere to the following:

1. `Authentication Data / Signature` data MUST fit in a 9-page Authentication Message (Page Numbers 0 through 8).
2. The `Length` field in the `Authentication Headers` (which denotes the length in bytes of `Authentication Data / Signature` only) MUST NOT exceed the value of 201.

# Forward Error Correction {#fec-details}

For Broadcast RID, Forward Error Correction (FEC) is provided by the lower layers in Extended Transports (Bluetooth 5.X, Wi-Fi NaN, and Wi-Fi BEACON). Legacy Transports do not have supporting FEC so with DRIP Authentication the following application level FEC scheme is used.

## Encoding

For any encoding the FEC data MUST start on new ASTM Authentication Page. To do this null padding is add before the actual FEC data starts and the length of the whole blob (null padding and FEC) is used as the `Additional Data Length`. To properly fit FEC data into an Authentication Page the number of parity-bytes is limited to 23 (or a multiple thereof). This means that the `Page Header` (and anything before it) is omitted in the FEC process.

### Single Page FEC {#enc-single-page}

To generate the parity a simple XOR operation using the previous and current page is used. Only the last 23-bytes are used during the XOR operation. For Page 0, a 23-byte null pad is used for the previous page. The resulting parity fills the `Additional Data` field of {{F3411}} with the `Additional Data Length` field being set to 23 or greater (depending on number of null pad bytes are needed to get onto the next page).

~~~~
Page N-1:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                Authentication Data / Signature                |
|                                                               |
|               +---------------+---------------+---------------+
|               |    ADL=33     |                               |
+---------------+---------------+                               |
|                          Null Padding                         |
|                                                               |
+---------------+---------------+---------------+---------------+

Page N:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                     Forward Error Correction                  |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+
~~~~
{:fig #single-fec title="Example Single Page FEC Encoding"}

### Multiple Page FEC {#enc-multi-page}

For Multiple Page FEC there are two flavors: Frame Recovery and Page Recovery. Both follow a similar process, but are offset at what data is actually protected.

(Editor Note: to improve interop should we explicitly select a polynomial for Reed Solomon that DRIP must use?)

#### Page Recovery {#enc-page}

Take the following example of an Authentication Message that 3-pages of parity are to be generated for:

~~~~
1250098960bf8c05042001001000a00145aac6b00abba268b7
12512001001000a0014579d8a404d48f2ef9bb9a4470ada5b4
1252ff1352c7402af9d9ebd20034e8d7a12920f4d7e91c1a73
1253dca7d04e776150825863c512c6eb075a206a95c59b297e
1254f2935fd416f27b1b42fd5d9dfaa0dec79f32287f41b454
12557101415def153a770d3e6c0b17ae560809bc634a822c1f
12563b1064b80a000000000000000000000000000000000000
~~~~

For Page Recovery the first two columns are ignored (being the `Page Header` and any data before it), the last 23 columns are extracted and have Reed Solomon performed on it to produce parity bytes. For the example the following 3-bytes of parity are generated:

~~~~
dc6c2b = ReedSolomon.encoder(0920ffdcf2713b)
~~~~

Each set of parity is the placed into a pseudo-frame as follows (each byte in its own message in the same column):

~~~~
0000dc00000000000000000000000000000000000000000000
00006c00000000000000000000000000000000000000000000
00002b00000000000000000000000000000000000000000000
~~~~

The above data set produces the following full set of parity:

~~~~
0000dc6657acd30b2ec4aa582049f52adf9f922e62c469563a
00006c636a59145a55417a3895fd543f19e94200be4abc5e94
000002bba5e28f5896d754caf50016a983993b149b5c9e6eeb
~~~~

The last 23-bytes are then added into the `Additional Data` field.

#### Frame Recovery {#enc-frame}

Frame Recovery uses the full ASTM Message and performs Reed Solomon over each byte. Below is an example of a number of messages.

~~~~
1042012001001000a0014579d8a404d48f2ef9000000000000
11249600006efeb019ee111ed37a097a0948081c10ffff0000
1250098960bf8c05042001001000a00145aac6b00abba268b7
12512001001000a0014579d8a404d48f2ef9bb9a4470ada5b4
1252ff1352c7402af9d9ebd20034e8d7a12920f4d7e91c1a73
1253dca7d04e776150825863c512c6eb075a206a95c59b297e
1254f2935fd416f27b1b42fd5d9dfaa0dec79f32287f41b454
12557101415def153a770d3e6c0b17ae560809bc634a822c1f
12563b1064b80a000000000000000000000000000000000000
130052656372656174696f6e616c2054657374000000000000
1402c2ffb019322d1ed3010000c008e40700fc080000000000
15004e2e4f5031323334353600000000000000000000000000
~~~~

Each column is extracted and has Reed Solomon performed on it to produce parity bytes.  In the below example 5-bytes of parity are generated with Frame Recovery:

~~~~
6c3f42b8a8 = ReedSolomon.encoder(101112121212121212131415)
~~~~

Each set of parity is the placed into a pseudo-frame as follows (each byte in its own message in the same column):

~~~~
6c000000000000000000000000000000000000000000000000
3f000000000000000000000000000000000000000000000000
42000000000000000000000000000000000000000000000000
b8000000000000000000000000000000000000000000000000
a8000000000000000000000000000000000000000000000000
~~~~

The above data set produces the following sets of parity:

~~~~
6c86337bf7ab746f5d62bb7f8de954104b121585d3975f6e92
3f06c1bce165b0e25930d57a63c24f751145e1dd8dc115029b
42e9979580327a6a14d421c12a33aa2e1a2e517daaee581016
b8012a7b3964f7b2720d387bfa77e945556f1831cd477ef3a3
a85bb403aada89926fb8fc2a14a9caacb4ec2f3a6ed2d8e9f9
~~~~

For Frame Recovery the above data would be placed into Authentication Pages like below:

~~~~
Page 7 = 12576c86337bf7ab746f5d62bb7f8de954104b121585d3975f
Page 8 = 12586e923f06c1bce165b0e25930d57a63c24f751145e1dd8d
Page 9 = 1259c115029b42e9979580327a6a14d421c12a33aa2e1a2e51
Page 10 = 125a7daaee581016b8012a7b3964f7b2720d387bfa77e94555
Page 11 = 125b6f1831cd477ef3a3a85bb403aada89926fb8fc2a14a9ca
Page 12 = 125cacb4ec2f3a6ed2d8e9f900000000000000000000000000
~~~~

Up to 240 (255 minus 15 pages max of FEC data) messages can be protected using Frame Recovery.

## Decoding

Due to the nature of Bluetooth 4 and the existing ASTM paging structure an optimization can be used. If a Bluetooth frame fails its CRC check, then the frame is dropped without notification to the upper protocol layers. From the Remote ID perspective this means the loss of a complete frame/message/page. In Authentication Messages, each page is already numbered so the loss of a page allows the receiving application to build a "dummy" page filling the entire page with nulls.

If Page 0 is being reconstructed an additional check of the `Last Page Index` to check against how many pages are actually present, MUST be performed for sanity. An additional check on the `Length` field SHOULD also be performed.

To determine if Single Page FEC or Multiple Page FEC has been used a simple check of the `Last Page Index` can be used. If the number of pages left after the `Length` of Authentication Data is exhausted than it is clear that the remaining pages are all FEC. The `Additional Data Length` byte can further confirm this; taking into account any null padding needed for page alignment.

### Single Page FEC {#dec-single-page}

Using the same methods as encoding, an XOR operation is used between the previous and current page (a 23-byte null pad is used as the start). The resulting 23-bytes should be data of the missing page.

### Multiple Page FEC {#dec-multi-page}

To determine if Page Recovery or Frame Recovery is used two modulo checks with the `ADL` after the length of the null-pad is removed are needed. One against the value of 23, and the other against the value of 25. If 23 comes back with a value of 0 then Page Recovery is being used. If 25 comes back with 0 then Frame Recovery is used. Any other combination indicates an error.

#### Page Recovery {#dec-page}

To decode Page Recovery, dummy pages (pages with nulls as the data) are needed in the places no page was received. Then Reed Solomon can decode across the columns of the 23-bytes of each page. Erasures can be used as it is known which pages are missing and can improve the Reed Solomon results by specifying them.

#### Frame Recovery {#dec-frame}

To decode Frame Recovery, the receiver must first extract all FEC data from the pages; concatenate them and then break into 25-byte chunks. This will produce the pseudo-frames. Now Reed Solomon can be used to decode columns, with dummy frames inserted where needed.

<!-- Author Note (atw): for Page Recovery adding the nulls is easy - however how do we specify/know the order and number of messages for Frame Recovery to insert the null-Messages? -->

## FEC Limitations

The worst case scenario is when the `Authentication Data / Signature` ends perfectly on a page (Page N-1). This means the `Additional Data Length` would start the next page (Page N) and have 22-bytes worth of null padding to align the FEC in to the next page (Page N+1). In this scenario an entire page (Page N) is being wasted just to carry the `Additional Data Length`. This should be be avoided at all costs - in an effort to maintain efficiency.

# Broadcast Attestation Structure {#bas}

To directly support Broadcast RID a variation of the `Attestation Structure` format of {{drip-registries}} SHOULD be used when running DRIP under the various Authentication Types (filling the `Authentication Data / Signature` field of {{astm-auth}}) and SAM Types (filling the `SAM Authentication Data` field ({{sam-authentication-data}})). The notable changes of the structure is that the timestamps are set by the UA and the `Attestor Identity Information` is set to the DET of the UA.

When using this structure the UA is always self-attesting its DRIP Entity Tag (DET). The Host Identity of the UA DET can be looked up by mechanisms described in {{drip-registries}} or by extracting it from Broadcast Attestation (see {{drip-link}} and {{drip-recommendations}}).

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                              UA                               |
|                        DRIP Entity Tag                        |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                        Attestation Data                       .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                   Not Before Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                    Not After Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                          UA Signature                         |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

UA DRIP Entity Tag (16 bytes):
    The UA DET in byte form (network byte order).

Attestation Data (0 to 112 bytes):
    Opaque attestation data.

Not Before Timestamp by UA (4-bytes):
    Timestamp denoting recommended time to start trusting data.

Not After Timestamp by UA (4 bytes):
    Timestamp denoting recommended time to stop trusting data.

UA Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the UA.
~~~~
{:fig #drip-data title="Broadcast Attestation Structure"}

`Attestation Data` is a field with a maximum of 112-bytes, containing data that the UA is attesting during its flight.

The `Not After Timestamp` and `Not Before Timestamp` MUST follow the format defined in {{F3411}}. That is a UNIX timestamp offset by 01/01/2019 00:00:00. `Not Before Timestamp` MUST be set to the time the structure is signed over. An additional offset is then added to push the `Not After Timestamp` a short time into the future to avoid replay attacks. The offset used against the UNIX timestamp is not defined in this document. Best practice identifying an acceptable offset should be used taking into consideration the UA environment, and propagation characteristics of the messages being sent and clock differences between the UA and Observers. A reasonable time would be to set `Not After Timestamp` 2 minutes ahead of `Not Before Timestamp`.

# DRIP Authentication Formats

All formats defined in this section fill the `Authentication Data / Signature` field in {{astm-auth}}.

When sending data over a medium that does not have underlying Forward Error Correction (FEC), for example Bluetooth 4, then {{fec-details}} MUST be used.

## Operator ID Signature

The existing ASTM {{F3411}} Authentication Type 0x2 can be used to send a static Self-Attestation of the Operator.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                            Operator                           |
|                        DRIP Entity Tag                        |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                     Operator Host Identity                    |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+
|                Not Before Timestamp by Operator               |
+---------------+---------------+---------------+---------------+
|                Not After Timestamp by Operator                |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                       Operator Signature                      |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

UA DRIP Entity Tag (16 bytes):
    The Operator DET in byte form (network byte order).

Operator Host Identity (32-bytes):
    HI of the Operator.

Not Before Timestamp by Operator (4 bytes):
    Timestamp denoting recommended time to start trusting data.

Not After Timestamp by Operator (4 bytes):
    Timestamp denoting recommended time to stop trusting data.

Operator Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the Operator.
~~~~
{:fig #op-sig title="DRIP Operator ID Signature"}

## Message Set Signature

When running under Extended Transports, the existing ASTM {{F3411}} Authentication Type 0x3 can be used to sign over the adjacent ASTM Messages in the Message Pack (Message Type 0xF).

The concatenation of all messages in the Message Pack (excluding Authentication) before signing MUST be in Message Type order and be placed between the `UA DRIP Entity Tag` and `Not Before Timestamp` field.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                              UA                               |
|                        DRIP Entity Tag                        |
|                                                               |
+---------------+---------------+---------------+---------------+
|                   Not Before Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                    Not After Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                          UA Signature                         |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

UA DRIP Entity Tag (16 bytes):
    The UA DET in byte form (network byte order).

Not Before Timestamp by UA (4-bytes):
    Timestamp denoting recommended time to start trusting data.

Not After Timestamp by UA (4 bytes):
    Timestamp denoting recommended time to stop trusting data.

UA Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the UA.
~~~~
{:fig #set-sig title="DRIP Message Set Signature"}

## Specific Authentication Method {#specific-method}

For ASTM Specific Authentication Method (Authentication Type 0x5) a special SAM Type field, specified as the first byte of the `Authentication Data / Signature` by {{F3411}}, is used to multiplex between various formats.

### SAM Data Format

{{sam-frame}} is the general format to hold authentication data when using SAM and is placed inside the `Authentication Data / Signature` field in {{astm-auth}}.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|   SAM Type    |                                               |
+---------------+                                               |
.                                                               .
.                     SAM Authentication Data                   .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+

SAM Type (1 byte):
    Byte defined by F3411 to multiplex SAMs

SAM Authentication Data (0 to 200 bytes):
    Opaque SAM authentication data.
~~~~
{:fig #sam-frame title="SAM Data Format"}

#### SAM Type

The SAM Type field is maintained by the International Civil Aviation Organization (ICAO) and for DRIP four are planned to be allocated:

| SAM Type | Description                       |
| -------- | --------------------------------- |
| 0x01     | DRIP Link ({{drip-link}})         |
| 0x02     | DRIP Wrapper ({{drip-wrapper}})   |
| 0x03     | DRIP Manifest ({{drip-manifest}}) |
| 0x04     | DRIP Frame ({{drip-frame}})       |

#### SAM Authentication Data

This field has a maximum size of 200-bytes, as defined by {{drip-restrictions}}. When possible the Broadcast Attestation Structure ({{bas}}) should be used in this space.

### DRIP Link

This SAM Type is used to transmit Broadcast Attestation's. The Broadcast Attestation of the Registry (HDA) over the UA MUST be sent (see {{drip-recommendations}}). Its structure is defined in {{drip-registries}} and an example of it can be found in {{link-example}}.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
.                                                               .
.                      Broadcast Attestation                    .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+

Broadcast Attestation: (136-bytes)
    HDA over UA. Generated by a DRIP Registry during Session ID 
    registration.
~~~~
{:fig #link-fig title="DRIP Link"}

This DRIP format MUST be used in conjunction with the DRIP Manifest with the hash of the DRIP Link message and other dynamic data (such as the Location Message (Message Type 0x2)).

#### Link Limitations

See {{replay-attacks}} for details on why this structure is not dynamically signed.

### DRIP Wrapper

This SAM Type is used to wrap and sign over a list of other {{F3411}} Broadcast RID messages. It MUST use the Broadcast Attestation Structure ({{bas}}).

The `Attestation Data` field is filled with full (25-byte) {{F3411}} Broadcast RID messages. The minimum number being 1 and the maximum being 4. The encapsulated messages MUST be in Message Type order as defined by {{F3411}}. All message types except Authentication (Message Type 0x2) and Message Pack (Message Type 0xF) are allowed.

To determine the number of messages wrapped the receiver can check that the length of the `Attestation Data` field of the DRIP Broadcast Attestation ({{bas}}) is a multiple of 25-bytes.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                              UA                               |
|                        DRIP Entity Tag                        |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                          ASTM Message                         |
|                                                               |
|                                                               |
|                                                               |
+               +---------------+---------------+---------------+
|               |                                               |
+---------------+                                               |
|                                                               |
|                          ASTM Message                         |
|                                                               |
|                                                               |
|                                                               |
+                               +---------------+---------------+
|                               |                               |
+---------------+---------------+                               |
|                                                               |
|                                                               |
|                          ASTM Message                         |
|                                                               |
|                                                               |
+                                               +---------------+
|                                               |               |
+---------------+---------------+---------------+               |
|                                                               |
|                                                               |
|                          ASTM Message                         |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+
|                   Not Before Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                    Not After Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                          UA Signature                         |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

UA DRIP Entity Tag (16 bytes):
    The UA DET in byte form (network byte order).

ASTM Message (25 bytes):
    Full ASTM Message.

Not Before Timestamp by UA (4-bytes):
    Timestamp denoting recommended time to start trusting data.

Not After Timestamp by UA (4 bytes):
    Timestamp denoting recommended time to stop trusting data.

UA Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the UA.
~~~~
{:fig #wrapper-fig title="Example 4-Message DRIP Wrapper"}

#### Wrapper Limitations

The primary limitation of the Wrapper format is the bounding of up to 4 ASTM Messages that can be sent within it. Another limitation is that the format can not be used as a surrogate for messages it is wrapping. This is due to high potential a receiver on the ground does not support DRIP. Thus when Wrapper is being used the wrapper data must effectively be sent twice; once as a single framed message (as specified in {{F3411}}) and then again wrapped within the Wrapper format.

### DRIP Manifest

This SAM Type is used to create message manifests. It MUST use the Broadcast Attestation Structure ({{bas}}).

By hashing previously sent messages and signing them we gain trust in UAs previous reports. An observer who has been listening for any considerable length of time can hash received messages and cross-check against listed hashes. This is a way to evade the limitation of a maximum of 4 messages in the Wrapper Format and reduce overhead.

The `Attestation Data` field is filled with 12-byte hashes of previous {{F3411}} Broadcast messages. A receiver does not need to have received every message in the manifest to verify it. A manifest SHOULD typically encompass a single transmission cycle of messages being sent, see {{operational}}.

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                              UA                               |
|                        DRIP Entity Tag                        |

+---------------+---------------+---------------+---------------+
|                                                               |
|                     Previous Manifest Hash                    |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                     Current Manifest Hash                     |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                       ASTM Message Hash                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                   Not Before Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                    Not After Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                          UA Signature                         |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

UA DRIP Entity Tag (16 bytes):
    The UA DET in byte form (network byte order).

Previous Manifest Hash (12 bytes):
    See Section 6.3.4.3.

Current Manifest Hash (12 bytes):
    See Section 6.3.4.3.

ASTM Message Hash (12 bytes):
    Hash of a single full ASTM Message. Multiple hashes should
    be in Message Type order.

Not Before Timestamp by UA (4-bytes):
    Timestamp denoting recommended time to start trusting data.

Not After Timestamp by UA (4 bytes):
    Timestamp denoting recommended time to stop trusting data.

UA Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the UA.
~~~~
{:fig #manifest-fig title="Example DRIP Manifest"}

#### Hash Algorithms and Operation {#hash-op}

The hash algorithm used for the Manifest Message is the same hash algorithm used in creation of the HHIT that is signing the Manifest.

An HHIT using cSHAKE128 {{!NIST.SP.800-185}} computes the hash as follows:

~~~~
cSHAKE128(ASTM Message, 96, "", "Remote ID Auth Hash")
~~~~

>> Note: {{drip-rid}} specifies cSHAKE128 but is open for the expansion of other OGAs.

##### Legacy Transport Hashing

Under this transport DRIP hashes the full ASTM Message being sent over the Bluetooth Advertising frame. For Authentication Messages all the Authentication Message Pages are concatenated together and hashed as one object. For all other Message Types the 25-byte message is hashed.

##### Extended Transport Hashing

Under this transport DRIP hashes the full ASTM Message Pack (Message Type 0xF) - regardless of its content.

#### Pseudo-Blockchain Hashes {#block-hashes}

Two special hashes are included in all Manifest messages; a previous manifest hash, which links to the previous manifest message, as well as a current manifest hash. This gives a pseudo-blockchain provenance to the manifest message that could be traced back if the observer was present for extended periods of time.

Creation:

: During creation and signing of this message format this field MUST be set to 0. So the signature will be based on this field being 0, as well as its own hash. It is an open question of if we compute the hash, then sign or sign then compute.

Cycling:

: There a few different ways to cycle this message. We can "roll up" the hash of 'current' to 'previous' when needed or to completely recompute the hash. This mostly depends on the previous note.

#### Manifest Limitations

A potential limitation to this format is dwell time of the UA. If the UA is not sticking to a general area then most likely the Observer will not obtain many (if not all) of the messages in the manifest. Examples of such scenarios include delivery or survey UA.

Another limitation is the length of hash, which is discussed in {{manifest-hash-length}}.

### DRIP Frame

This SAM Type is for when the authentication data does not fit in other defined formats under DRIP and is reserved for future expansion under DRIP if required. This SAM Type SHOULD use the Broadcast Attestation Structure ({{bas}}).

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                              UA                               |
|                        DRIP Entity Tag                        |
|                                                               |
+---------------+---------------+---------------+---------------+
|  Frame Type   |                                               |
+---------------+                                               .
.                        Attestation Data                       .
.                                                               .
|                                                               |
+---------------+---------------+---------------+---------------+
|                   Not Before Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                    Not After Timestamp by UA                  |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                          UA Signature                         |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

UA DRIP Entity Tag (16 bytes):
    The UA DET in byte form (network byte order).

Frame Type (1 byte):
    Multiplexing frame type.

Attestation Data (0 to 111 bytes):
    Opaque attestation data.

Not Before Timestamp by UA (4-bytes):
    Timestamp denoting recommended time to start trusting data.

Not After Timestamp by UA (4 bytes):
    Timestamp denoting recommended time to stop trusting data.

UA Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the UA.
~~~~
{:fig #frame-fig title="Example DRIP Frame"}

#### Frame Type

Multiplexing byte for future different DRIP Frame formats.

| Frame Type | Name | Description |
| ---------- | ---- | ----------- |
| 0x00       | Reserved | Reserved |
| 0xC0-0xFF  | Experimental | Experimental Use |

#### Frame Limitations

With the Broadcast Attestation Structure only 115-bytes of `Attestation Data` are free for use.

# Requirements & Recommendations

## Legacy Transports

With Legacy Advertisements the goal is to attempt to bring reliable receipt of the paged Authentication Message. Forward Error Correction ({{fec-details}}) MUST be used when using Legacy Advertising methods (such as Bluetooth 4.X).

Under ASTM Bluetooth 4.X rules, transmission of dynamic messages are at least every 1 second. DRIP Authentication Messages typically contain dynamic data (such as the DRIP Manifest or DRIP Wrapper) and must be sent at the dynamic rate of 1 per second.

## Extended Transports

Under the ASTM specification, Bluetooth 5.X Wi-Fi NaN, and Wi-Fi BEACON transport of Remote ID is to use the Message Pack (Message Type 0xF) format for all transmissions. Under Message Pack messages are sent together (in Message Type order) in a single Bluetooth 5 extended frame (up to 9 single frame equivalent messages under Bluetooth 4.X). Message Packs are required by ASTM to be sent at a rate of 1 per second (like dynamic messages).

Without any fragmentation or loss of pages with transmission Forward Error Correction ({{fec-details}}) MUST NOT be used as it is impractical.

## Authentication {#drip-recommendations}

It is REQUIRED that a UA send the following Authentication Formats to fulfill the {{?drip-requirements}}:

1. DRIP Link using the Broadcast Attestation of HDA and the UA (satisfying GEN-1 and GEN-3)
2. Any other DRIP Authentication Format (RECOMMENDED: DRIP Manifest or DRIP Wrapper) where the UA is dynamically signing data (satisfying GEN-1 and GEN-2)

It is RECOMMENDED the following set of Authentication Formats are sent for support of offline Observers:

1. DRIP Link using the Broadcast Attestation of HID Root and the RAA (CAA) (satisfies GEN-3)
2. DRIP Link using the Broadcast Attestation of RAA (CAA) and the HDA (USS) (satisfies GEN-3)
3. DRIP Link using the Broadcast Attestation of HDA (USS) and the UA (satisfies GEN-1 and GEN-3)
4. Any other DRIP Authentication Format (RECOMMENDED: DRIP Manifest or DRIP Wrapper) where the UA is dynamically signing data (satisfies GEN-1 and GEN-2)

## Operational

UAS operation may impact the frequency of sending DRIP Authentication messages. Where a UA is dwelling in one location, and the channel is heavily used by other devices, "occasional" message authentication may be sufficient for an observer. Contrast this with a UA traversing an area, and then every message should be authenticated as soon as possible for greatest success as viewed by the receiver.

Thus how/when these DRIP authentication messages are sent is up to each implementation. Further complication comes in contrasting Legacy and Extended Transports.  In Legacy, each message is a separate hash within the Manifest. So, again in dwelling, may lean toward occasional message authentication. In Extended Transports, the hash is over the Message Pack so only few hashes need to be in a Manifest. A single Manifest can handle a potential two Message Packs (for a full set of messages) and a DRIP Link Authentication Message for the HDA UA assertion.

A separate issue is the frequency of transmitting the DRIP Link Authentication Message for the HDA UA assertion when using a Manifest Message. This message content is static; its hash never changes radically. The only change is the 4-byte timestamp in the Authentication Message headers. Thus, potentially, in a dwelling operation it can be sent once per minute, where its hash is in every Manifest. A receiver can cache all DRIP Link Authentication Message for the HDA UA assertion to mitigate potential packet loss.

The preferred mode of operation is to send the HDA UA assertion every 3 seconds and Manifest messages immediately after a set of UA operation messages (e.g. Basic, Location, and System messages).

<!-- Author Note (atw): is this really what we want? Manifest as the default and Wrapper as the secondary? Or should this language become looser to allow both as its six of one half a dozen the other to which is used. -->

### DRIP Wrapper {#wrapper-operations}

The DRIP Wrapper MUST NOT be used in place of sending the ASTM messages as is. All receivers MUST be able to process all the messages specified in {{F3411}}. Only sending them within the DRIP Wrapper will make them opaque to receivers lacking support for DRIP authentication messages. Thus messages within a Wrapper are sent twice: in the clear, and authenticated within the Wrapper. The DRIP Manifest format would seem to be a more efficient use of the transport channel.

The DRIP Wrapper has a specific use case for DRIP aware receivers. For receiver plotting received Location Messages (Message Type 0x2) on a map display an embedded Location Message in a DRIP Wrapper can be colored differently to signify trust in the Location data - be it current or previous Location reports that are wrapped.

# ICAO Considerations

DRIP requests the following SAM Type's to be allocated:

1. DRIP Link
2. DRIP Wrapper
3. DRIP Manifest
4. DRIP Frame

<!-- Author Note (atw): need help on this section; how should this be formatted? -->

# IANA Considerations

This document requests a new number field for Frame Type with initial values as defined in {{frame-type}}.

# Security Considerations

## Manifest Hash Length

For DRIP Manifest an 12-byte hash length has been selected by the authors for a number of reasons.

1. Hash lengths smaller than 8-bytes (for example 4-bytes) were originally contemplated but ruled out by comments by various cryptographers. The main concern raised in this forum was that the length of hash would not provide strong resistance against collision rate. The authors also after further review agreed with this and also realized operationally it was not necessarily viable. While 4-byte hashes would allow more messages to be filled into a single DRIP Manifest payload (up to 22 individual hashes) the length of time for the UA to stay in a single place where the Observer would receive all the originally messages to rehash to verify such a message was impractical.
2. Hash lengths larger than 8-bytes (for example 12 or 16-bytes) were also considered by the authors. These got the approval of the cryptographers but the number of hashes to send became much lower (only 5 individual hashes). While this lower number is a more reasonable number of original messages the Observer would have to capture it would also mean that potentially more DRIP Manifests would need to be sent. Overall the increase length of the hash did not operationally justify the cost.
3. Simplifying the current design and locking it into using the same hash as the HHIT instead of allowing for agility in either hash algorithm or length seemed more realistic to the authors today.

## Replay Attacks

The astute reader may note that the DRIP Link messages, which are recommended to be sent, are static in nature and contain various timestamps. These Attestation Link messages can easily be replayed by an attacker who has copied them from previous broadcasts. There are two things to mitigate this in DRIP:

1. If an attacker (who is smart and spoofs more than just the UAS ID/data payloads) willing replays an Attestation Link message they have in principle actually helped by ensuring the message is sent more frequently and be received by potential Observers.
2. It is RECOMMENDED to send more than just DRIP Link messages, specifically those that sign over changing data using the current session keypair, and those messages are sent more frequently. An UA beaconing these messages then actually signing other messages using the keypair validates the data receiver by an Observer. An UA who does not either run DRIP themselves or does not have possession of the same private key, would be clearly exposed upon signature verification.

## Trust Timestamp Offsets

Note the discussion of Trust Timestamp Offsets here is in context of the DRIP Wrapper ({{drip-wrapper}}) and DRIP Manifest ({{drip-manifest}}) messages. For DRIP Link ({{drip-link}}) messages these offsets are set by the Attestor (typically a registry) and have their own set of considerations as seen in {{drip-registries}}.

The offset of the Trust Timestamp (defined as a very short Expiration Timestamp) is one that needs careful consideration for any implementation. The offset should be shorter than any given flight duration (typically less than an hour) but be long enough to be received and processed by Observers (larger than a few seconds). It recommended that 3-5 minutes should be sufficient to serve this purpose in any scenario, but is not limited by design.

# Acknowledgments

Ryan Quigley and James Mussi of AX Enterprize, LLC for early prototyping to find holes in the draft specifications.

Soren Friis for pointing out that Wi-Fi implementations would not always give access to the MAC Address, originally used in calculation of the hashes for DRIP Manifest. Also, for confirming that Message Packs (0xF) can only carry up to 9 ASTM frames worth of data (9 Authentication pages) - this drove the requirement for max page length of Authentication Data itself.

--- back

# Authentication State Diagrams & Color Scheme {#appendix-a}

ASTM Authentication has really only 3 states: None, Invalid or Valid. This is because under ASTM the idea is that Authentication is done by an external service hosted somewhere on the Internet so it is assumed you will always get some sort of answer back. With DRIP this classification becomes more complex with the support of "offline" scenarios where the receiver does not have Internet connectivity. With the use of asymmetric keys this means the public key (PK) must somehow be obtained - {{drip-registries}} gets more into detail how these keys are stored on DNS and one reason for DRIP Authentication is to send PK's over Broadcast RID.

There are two keys of interest: the PK of the UA and the PK of the HDA (or Registry). This document gives a clear way to send the PK of the UA over the Broadcast RID messages - however the PK of the Registry is not. It can be using the same mechanism but is not required to do so due to potential operational constraints and implementation of a given UA transmitter. As such there are scenarios where you may have part of the key-chain but not all of it.

The intent of this appendix is to give some kind of recommended way to classify these various states and convey it to the user through colors and state names/text.

## State Table

The table below lays out the RECOMMENDED colors to associate with state.

| State        | Color  | Details                                                        |
| ------------ | ------ | -------------------------------------------------------------- |
| None         | Black  | No Authentication being received                               |
| Partial      | Gray   | Authentication being received but missing pages                |
| Unsupported  | Brown  | Authentication Type/SAM Type of received message not supported |
| Unverifiable | Yellow | Data needed for verification missing                           |
| Verified     | Green  | Valid verification results                                     |
| Trusted      | Blue   | Valid verification results and HDA is marked as trusted        |
| Questionable | Orange | Inconsistent verification results                              |
| Unverified   | Red    | Invalid verification results                                   |
| Conflicting  | Purple | Inconsistent verification results and HDA is marked as trusted |

## State Diagrams

This section gives some RECOMMENDED state flows that DRIP should follow.

### Notations

~~~~
o--------------o
|   PROCESS    |
o--------------o

+--------------+
|    STATE     |
+--------------+

 ooooo
o  N  o    Transition N
 ooooo

+----->    Transition Option False/No

----->     Transition Option True/Yes

~~~~
{:fig #state-notations title="Diagram Notations"}

### General

~~~~
o---------------------o      ooooo        +------+
|        Start        |---->o  1  o+----->| None |
o---------------------o      ooooo        +------+
                               |
                               v
                             ooooo        +-------------+
                            o  2  o+----->| Unsupported |
                             ooooo        +-------------+
                               |             ^
                               v             |
          +---------+        ooooo           |
          | Partial |<-----+o  3  o          |
          +---------+        ooooo           |
                               |             |
                               v             +
                             ooooo         ooooo        o-------------o
                            o  4  o------>o  5  o------>| SAM Decoder |
                             ooooo         ooooo        o-------------o
                               +
                               |
                               v
                        o------------------o
                        | AuthType Decoder |
                        o------------------o
~~~~
{:fig #std-state-fig title="Standard Authentication Colors/State"}

| Transition | Transition Query                              | Next State/Process/Transition (Yes, No) |
| ---------- | --------------------------------------------- | --------------------------------------- |
| 1          | Receiving Authentication Pages?               | 2, None                                 |
| 2          | Authentication Type Supported?                | 3, Unsupported                          |
| 3          | All Pages of Authentication Message Received? | 4, Partial                              |
| 4          | Is Authentication Type received 5?            | 5, AuthType Decoder                     |
| 5          | Is SAM Type Supported?                        | SAM Decoder, Unsupported                |

### DRIP SAM

~~~~
o-------------o      ooooo        o-----------------------------o
| SAM Decoder |---->o  6  o------>| DRIP Wrapper/Manifest/Frame |
o-------------o      ooooo        o-----------------------------o
                       +                 |              ^
                       |                 |              |
                       v                 v              |
                o-----------o    o--------------------o |
                | DRIP Link |--->| Update State Cache | |
                o-----------o    o--------------------o |
                                   |                    |
                                   v                    |
        o--------------o         ooooo       o----------------------o
        | NOP / Return |<------+o  7  o----->| Extract Message from |
        o--------------o         ooooo       | Verification Queue   |
                                             o----------------------o
~~~~
{:fig #sam-state-fig title="DRIP SAM Decoder"}

| Transition | Transition Query                | Next State/Process/Transition (Yes, No)               |
| ---------- | ------------------------------- | ----------------------------------------------------- |
| 6          | Is SAM Type DRIP Link?          | DRIP Link, DRIP Wrapper/Manifest/Frame                |
| 7          | Messages in Verification Queue? | Extract Message from Verification Queue, NOP / Return |

### DRIP Link {#link-diagram}

~~~~
o-----------o       ooooo         ooooo        +--------------+
| DRIP Link |----->o  8  o+----->o  9  o+----->| Unverifiable |
o-----------o       ooooo         ooooo        +--------------+
                      |             |
                      |-------------'
                      v
                    ooooo        +------------+
                   o  10 o+----->| Unverified |
                    ooooo        +------------+
                      |
                      v
                o---------------------o
                | Add UA DET/PK       |
                | to Key Cache        |
                o---------------------o
                      |
                      v
                    ooooo         +----------+
                   o  11 o+------>| Verified |
                    ooooo         +----------+
                      |              ^
                      v              |
                o-------------------------o
                | Mark UA DET/PK          |
                | as Trusted in Key Cache |
                o-------------------------o
~~~~ 
{:fig #drip-link-state-fig title="DRIP Link State Decoder"}

| Transition | Transition Query                                | Next State/Process/Transition (Yes, No)                |
| ---------- | ----------------------------------------------- | ------------------------------------------------------ |
| 8          | Registry DET/PK in Key Cache?                   | 10, 9                                                  |
| 9          | Registry PK found Online?                       | 10, Unverifiable                                       |
| 10         | Registry Signature Verified?                    | Add UA DET/PK to Key Cache, Unverified                 |
| 11         | Registry DET/PK marked as Trusted in Key Cache? | Mark UA DET/PK as Trusted in Key Cache, Verified       |

### DRIP Wrapper/Manifest/Frame

~~~~
o-----------------------------o         +--------------+
| DRIP Wrapper/Manifest/Frame |         | Unverifiable |
o-----------------------------o         +--------------+
           |                                   ^
           v                                   |
         ooooo         ooooo        o--------------------o
        o  12 o+----->o  13 o+----->| Add Message to     |
         ooooo         ooooo        | Verification Queue |
           |             |          o--------------------o
           |             |                    
           |-------------'             
           v                           
         ooooo         ooooo         ooooo        +------------+
        o  14 o+----->o  15 o+----->o  16 o+----->| Unverified |
         ooooo         ooooo         ooooo        +------------+
           |             |             |
           v             v             |
         ooooo        +-------------+  |
        o  17 o+----->| Conflicting |  |
         ooooo        +-------------+  |
           |                           |
           v                           v
         ooooo                  +--------------+
        o  18 o---------------->| Questionable |
         ooooo                  +--------------+
           +
           |
           v
         ooooo        +----------+
        o  19 o+----->| Verified |
         ooooo        +----------+
           |
           v
        +---------+
        | Trusted |
        +---------+
~~~~
{:fig #drip-state-fig title="DRIP Wrapper/Manifest/Frame State Decoder"}

| Transition | Transition Query                                                          | Next State/Process/Transition (Yes, No) |
| ---------- | ------------------------------------------------------------------------- | --------------------------------------- |
| 12         | UA DET/PK in Key Cache?                                                   | 14, 13                                  |
| 13         | UA PK found Online?                                                       | 14, Add Message to Verification Queue   |
| 14         | UA Signature Verified?                                                    | 17, 15                                  |
| 15         | Has past Messages of this type been marked as Trusted?                    | Conflicting, 16                         |
| 16         | Has past Messages of this type been marked as Questionable or Verified?   | Questionable, Unverified                |
| 17         | Has past Messages of this type been marked as Conflicting?                | Conflicting, 18                         |
| 18         | Has past Messages of this type been marked as Questionable or Unverified? | Questionable, 19                        |
| 19         | Is UA DET/PK marked as Trusted in Key Cache?                              | Trusted, Verified                       |

# HDA-UA Broadcast Attestation {#link-example}

~~~~
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                                                               |
|                             DRIP                              |
|                       Entity Tag of HDA                       |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                             DRIP                              |
|                       Entity Tag of UA                        |
|                                                               |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                      Host Identity of UA                      |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+
|                   Not Before Timestamp by HDA                 |
+---------------+---------------+---------------+---------------+
|                    Not After Timestamp by HDA                 |
+---------------+---------------+---------------+---------------+
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                       Signature by HDA                        |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

DRIP Entity Tag of HDA: (16-bytes)
    DET of HDA.

DRIP Entity Tag of UA: (16-bytes)
    DET of UA.

Host Identity of UA: (32-bytes)
    HI of UA

Expiration Timestamp by HDA (4 bytes):
    Timestamp denoting recommended time to trust data to.

Signing Timestamp by HDA (4 bytes):
    Current time at signing.

HDA Signature (64 bytes):
    Signature over preceding fields using the keypair of 
    the HDA.
~~~~
{:fig #b-axy-fig title="Example DRIP HDA-UA Broadcast Attestation"}

# Example Authentication Messages {#auth-examples}

## Authentication Data Only

This is an example of an Authentication Message with 52-bytes of Authentication Data.

~~~~
Page 0:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+    Authentication Headers     +---------------+
|                                               |               |
+---------------+---------------+---------------+               |
|                                                               |
|                Authentication Data / Signature                |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Page 1:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                Authentication Data / Signature                |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Page 2:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                Authentication Data / Signature                |
|                                                               |
|               +---------------+---------------+---------------+
|               |                                               |
+---------------+                                               |
|                        Null Padding                           |
|                                                               |
+---------------+---------------+---------------+---------------+
~~~~

## Authentication Data & Additional Data

This example has 52-bytes of Authentication Data and 20-bytes of Additional Data.

~~~~
Page 0:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+     Authentication Headers    +---------------+
|                                               |               |
+---------------+---------------+---------------+               | 
|                                                               |
|                Authentication Data / Signature                |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Page 1:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                Authentication Data / Signature                |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Page 2:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                Authentication Data / Signature                |
|                                                               |
|               +---------------+---------------+---------------+
|               |    ADL=20     |                               |
+---------------+---------------+                               |
|                       Additional Data                         |
|                                                               |
+---------------+---------------+---------------+---------------+

Page 3:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                       Additional Data                         |
|                                               +---------------+
|                                               |               |
+---------------+---------------+---------------+               |
|                                                               |
|                         Null Padding                          |
|                                                               |
+---------------+---------------+---------------+---------------+
~~~~

## DRIP Link Example

This DRIP Link example includes FEC for a single page.

~~~~
Page 0:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+     Authentication Headers    +---------------+
|                                               |   SAM Type    |
+---------------+---------------+---------------+---------------+ 
|                                                               |
|                     Broadcast Attestation                     |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 500789d9c08c05042001001000a00145aac6b00abba268b7

Page 1:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                     Broadcast Attestation                     |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 512001001000a0014579d8a404d48f2ef9bb9a4470ada5b4 

Page 2:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                     Broadcast Attestation                     |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 52ff1352c7402af9d9ebd20034e8d7a12920f4d7e91c1a73 

Page 3:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                     Broadcast Attestation                     |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 53dca7d04e776150825863c512c6eb075a206a95c59b297e 

Page 4:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                     Broadcast Attestation                     |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 54f2935fd416f27b1b42fd5d9dfaa0dec79f32287f41b454 

Page 5:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                                                               |
|                     Broadcast Attestation                     |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 557101415def153a770d3e6c0b17ae560809bc634a822c1f 

Page 6:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |             Broadcast Attestation             /
+---------------+---------------+---------------+---------------+
/               |      ADL      |                               |
+---------------+---------------+                               |
|                                                               |
|                          Null Padding                         |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 563b1064b80a290000000000000000000000000000000000 

Page 7:
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Page Header  |                                               |
+---------------+                                               |
|                                                               |
|                    Forward Error Correction                   |
|                                                               |
|                                                               |
|                                                               |
+---------------+---------------+---------------+---------------+

Hex: 57bcbe21684809ed5284aa40b4b7bc45efeb3a47d24b6645
~~~~

# Example TX/RX Flow

In this example the UA is sending all DRIP Authentication Message formats (DRIP Link, DRIP Wrapper and DRIP Manifest) during flight, along with standard ASTM Messages. The objective is to show the combinations of messages that must be received to properly validate a DRIP equipped UA and examples of their various states ({{appendix-a}}).

~~~~
        +-------------------+
  .-----| Unmanned Aircraft |-----.
  |     +-------------------+     |
  | 1       | 2         | 3       | 4
  |         |           |         |

  O         O           O         O
--|--     --|--       --|--     --|--
 / \       / \         / \       / \
  A         B           C         D


Broadcast Paths: Messages Received
1: DRIP Link
2: DRIP Link and DRIP Wrapper or DRIP Manifest
3: DRIP Wrapper or DRIP Manifest
4: None

Observers: Authentication State
A: Unverifiable
B: Verified, Trusted, Unverified, Questionable, or Conflicting
C: Unverifiable
D: None
~~~~

As the above example shows to properly authenticate both a DRIP Link and a DRIP Wrapper or DRIP Manifest are required.
